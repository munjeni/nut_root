#!/system/bin/sh

set +x
_PATH="$PATH"
export PATH="/system/xbin:/system/bin:/sbin"

BOOTREC_LED_RED="/sys/class/leds/$(/system/xbin/busybox ls -1 /sys/class/leds|/system/xbin/busybox grep red)/brightness"
BOOTREC_LED_GREEN="/sys/class/leds/$(/system/xbin/busybox ls -1 /sys/class/leds|/system/xbin/busybox grep green)/brightness"
BOOTREC_LED_BLUE="/sys/class/leds/$(/system/xbin/busybox ls -1 /sys/class/leds|/system/xbin/busybox grep blue)/brightness"

# Function definitions
TECHOL(){
  _TIME=`/system/xbin/busybox date +"%H:%M:%S"`
  echo "${_TIME} >> $*" >> ${PREPLOG}
  return 0
}
TEXECL(){
  _TIME=`/system/xbin/busybox date +"%H:%M:%S"`
  echo "${_TIME} >> $*" >> ${PREPLOG}
  $* 2>&1 >> ${PREPLOG}
  _RET=$?
  echo "${_TIME} >> RET=${_RET}" >> ${PREPLOG}
  return ${_RET}
}
#86|87) TEXECL mount -t ntfs ${BOOTREC_EXTERNAL_SDCARD} /storage/sdcard1; return $?;;
MOUNTSDCARD(){
	case $* in
		06|6|0B|b|0C|c|0E|e) TEXECL mount -t vfat ${BOOTREC_EXTERNAL_SDCARD} /storage/sdcard1; return $?;;
		07|7) TEXECL insmod /system/lib/modules/nls_utf8.ko;
		      TEXECL insmod /system/lib/modules/texfat.ko;
		      TEXECL mount -t texfat ${BOOTREC_EXTERNAL_SDCARD} /storage/sdcard1;
		      return $?;;
		83) PTYPE=$(/system/xbin/busybox blkid ${BOOTREC_EXTERNAL_SDCARD} | /system/xbin/busybox awk -F' ' '{ print $NF }' | /system/xbin/busybox awk -F'[\"=]' '{ print $3 }');
		    TEXECL mount -t $PTYPE ${BOOTREC_EXTERNAL_SDCARD} /storage/sdcard1;
		    return $?;;
		 *) return 1;;
	esac
	TECHOL "### MOUNTSDCARD did not run with a parameter!";
	return 1;
}
SETLED() {
	if [ "$1" = "on" ]; then

		TECHOL "Turn on LED R: $2 G: $3 B: $4"
		echo "$2" > ${BOOTREC_LED_RED}
		echo "$3" > ${BOOTREC_LED_GREEN}
		echo "$4" > ${BOOTREC_LED_BLUE}

	else
		TECHOL "Turn off LED"
		echo "0" > ${BOOTREC_LED_RED}
		echo "0" > ${BOOTREC_LED_GREEN}
		echo "0" > ${BOOTREC_LED_BLUE}
	fi
}
EXIT2CM(){
	# Turn on a red led, as a visual warning to the user
	SETLED on 255 0 0

	sleep 2

	# Turn off LED
	SETLED off

	# Ending log
	DATETIME=`/system/xbin/busybox date +"%d-%m-%Y %H:%M:%S"`
	echo "STOP Dual Recovery STAGE 1 at ${DATETIME}" >> ${PREPLOG}

	umount -l /storage/sdcard1

	export PATH="${_PATH}"

	exec /system/bin/chargemon.stock
	exit 0
} 

BUSYBOX="/system/xbin/busybox"
NOGOODBUSYBOX="false"

#https://github.com/android/platform_system_core/commit/e18c0d508a6d8b4376c6f0b8c22600e5aca37f69
#The busybox in all of the recoveries has not yet been patched to take this in account.
${BUSYBOX} blockdev --setrw $(${BUSYBOX} find /dev/block/platform/msm_sdcc.1/by-name/ -iname "system"

if [ -x "${BUSYBOX}" ]; then

	TECHOL "Using ${BUSYBOX}"

	TEXECL mount -o remount,rw rootfs /
	TEXECL mount -o remount,rw /system

	if [ -f "/system/xbin/disableric" ]; then
		TEXECL mount -t securityfs -o nosuid,nodev,noexec securityfs /sys/kernel/security
		TEXECL mkdir -p /sys/kernel/security/sony_ric
		TEXECL chmod 755 /sys/kernel/security/sony_ric
		TEXECL echo "0" > /sys/kernel/security/sony_ric/enable
	fi

	if [ -x "${BUSYBOX}" -a -x "/system/bin/dualrecovery.sh" ]; then

		TECHOL "Install busybox to /sbin..."
		${BUSYBOX} cp ${BUSYBOX} /sbin/

		if [ ! -f "/system/etc/.xzdrbusybox" ]; then

			TECHOL "Creating symlinks in /system/xbin to all functions of busybox."
			# Create a symlink for each of the supported commands
			for sym in `${BUSYBOX} --list`; do
				TECHOL "Linking ${BUSYBOX} to /system/xbin/$sym"
				${BUSYBOX} ln -sf ${BUSYBOX} /system/xbin/$sym
			done

			${BUSYBOX} touch /system/etc/.xzdrbusybox

		else

			TECHOL "Skipping creation of busybox symlinks."

		fi

		export PATH="/system/xbin"

		TECHOL "Copying recovery files to /sbin"
		TEXECL cp /system/bin/dualrecovery.sh /sbin/init.sh
		TEXECL chmod 755 /sbin/init.sh

	else

		TECHOL "Key files missing, exitting!"

		EXIT2CM

	fi

	TEXECL mount -o remount,ro rootfs /
	TEXECL mount -o remount,ro /system

fi

# As a precaution, give users a way out. This works best if the user has an external sdcard.
if [ -f "${DRPATH}/donotrun" ]; then

	TECHOL "Exitting by DNR file.";

	EXIT2CM

fi

EXIT2CM

